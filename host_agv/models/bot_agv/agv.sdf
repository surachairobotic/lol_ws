<?xml version="1.0" ?>
<sdf version="1.5">
  <model name="bot_agv">  
  
  <!-- ****************** ROBOT BASE FOOTPRINT ***************************** -->
    <link name='base_footprint'>
    <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>
    </link>
  
  <!-- ****************** ROBOT BASE LINK     ***************************  -->
    <link name='base_link'>
      <inertial>
        <pose>0.27563 0.56281 0.7922 0 0 0</pose>
        <inertial>
          <ixx>9.2282</ixx>
          <ixy>3.3569E-05</ixy>
          <ixz>7.603E-15</ixz>
          <iyy>22.081</iyy>
          <iyz>-8.5315E-17</iyz>
          <izz>13.953</izz>
        </inertial>
      </inertial>
      
      <collision name='base_link_collision'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://bot_agv/meshes/base_link.STL</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>

      <visual name='base_link_visual'>
        <pose>-0.3 0.8 -0.5 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://bot_agv/meshes/base_link.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Green</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
  </link> 

  <joint name='base_joint' type='fixed'>
    <pose relative_to='base_footprint'>0 0 0 0 0 0</pose>
    <parent>base_footprint</parent>
    <child>base_link</child>
  </joint>      
  
<!-- ****************************** ROBOT LIDAR LINK ***************************** -->

<link name="laser_link">
  <inertial>
    <pose>-0.020 0 0.161 0 0 0</pose>
    <inertia>
      <ixx>0.001</ixx>
      <ixy>0.000</ixy>
      <ixz>0.000</ixz>
      <iyy>0.001</iyy>
      <iyz>0.000</iyz>
      <izz>0.001</izz>
    </inertia>
    <mass>0.114</mass>
  </inertial>

  <collision name="laser_sensor_collision">
    <pose>0.37369 0.0078 0.18386 0 0 0</pose>
    <geometry>
      <cylinder>
        <radius>0.0508</radius>
        <length>0.055</length>
      </cylinder>
    </geometry>
  </collision>

  <visual name="laser_sensor_visual">
    <pose>0.37369 0.0078 0.18386 0 0 0</pose>
    <geometry>
      <mesh>
        <uri>model://turtlebot3_common/meshes/lds.dae</uri>
        <scale>0.001 0.001 0.001</scale>
      </mesh>
    </geometry>
  </visual>

  <sensor name="hls_lfcd_lds" type="ray">
    <always_on>true</always_on>
    <visualize>true</visualize>
    <pose>0.37369 0.0078 0.17386 0 0 0</pose>
    <update_rate>5</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>360</samples>
          <resolution>1.000000</resolution>
          <min_angle>0.000000</min_angle>
          <max_angle>6.280000</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.120000</min>
        <max>3.5</max>
        <resolution>0.015000</resolution>
      </range>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
    </ray>
    <plugin name="agv_laserscan" filename="libgazebo_ros_ray_sensor.so">
      <ros>
        <!-- <namespace>/agv</namespace> -->
        <remapping>~/out:=scan</remapping>
      </ros>
      <output_type>sensor_msgs/LaserScan</output_type>
      <frame_name>laser_link</frame_name>
    </plugin>
  </sensor>
</link>

<joint name="laser_joint" type="fixed">
  <pose relative_to='base_link'>0.37369 0.0078 0.18386 0 0 0</pose>
  <parent>base_link</parent>
  <child>laser_link</child>
  <axis>
    <xyz>0 0 1</xyz>
  </axis>
</joint>

<!-- *********************** IMU SENSOR SETUP **************************  -->
<link name="imu_link">
  <sensor name="agv_imu" type="imu">
    <always_on>true</always_on>
    <update_rate>200</update_rate>
    <imu>
      <angular_velocity>
        <x>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
          </noise>
        </x>
        <y>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
          </noise>
        </y>
        <z>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
          </noise>
        </z>
      </angular_velocity>
      <linear_acceleration>
        <x>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
          </noise>
        </x>
        <y>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
          </noise>
        </y>
        <z>
          <noise type="gaussian">
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
          </noise>
        </z>
      </linear_acceleration>
    </imu>
    <plugin name="bot_imu" filename="libgazebo_ros_imu_sensor.so">
      <ros>
        <!-- <namespace>/tb3</namespace> -->
        <remapping>~/out:=imu</remapping>
      </ros>
    </plugin>
  </sensor>
</link>

 <joint name="imu_joint" type="fixed">
  <pose relative_to="base_link">0.17369 0.0078 0.16386 0 0 0</pose>
  <parent>base_link</parent>
  <child>imu_link</child>
  <axis>
    <xyz>0 0 1</xyz>
  </axis>
 </joint>

<!-- ****************** ROBOT FLAT LINK     ***************************  --> 
  <link name='flat_wheel'>
    <inertial>
      <pose>0 0 0 0 0 0</pose>
      <inertial>
        <ixx>0</ixx>
        <ixy>0</ixy>
        <ixz>0</ixz>
        <iyy>0</iyy>
        <iyz>0</iyz>
        <izz>0</izz>
      </inertial>
    </inertial>

      <collision name='flat_wheel_collision'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://bot_agv/meshes/flat_wheel.STL</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      
      <visual name='flat_wheel_visual'>
        <pose>-0.41936 -0.2222 -0.02806 1.5708 -0 1.5708</pose>
        <geometry>
          <mesh>
            <uri>model://bot_agv/meshes/flat_wheel.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>      
  </link>

  <joint name='flat_joint' type='fixed'>
    <pose relative_to='base_link'>0 0 0 0 0 0</pose>
    <parent>base_link</parent>
    <child>flat_wheel</child>
  </joint>       

<!-- ****************** ROBOT FRONT WHEEL     ***************************  -->
    <joint name='front_1joint' type='fixed'>
      <pose relative_to='base_link'>0.37064 -0.2222 -0.02206 1.5708 -0.470493 2e-06</pose>
      <parent>base_link</parent>
      <child>front_1wheel</child>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name='front_1wheel'>
      <pose relative_to='front_1joint'>0 0 0 0 0 0</pose>
      <inertial>
        <pose>0 0 -0.0105 0 -0 0</pose>
        <mass>0.07</mass>
        <inertia>
          <ixx>1.95595e-05</ixx>
          <ixy>8.47033e-22</ixy>
          <ixz>3.47763e-20</ixz>
          <iyy>1.95595e-05</iyy>
          <iyz>-2.00251e-20</iyz>
          <izz>3.18071e-05</izz>
        </inertia>
      </inertial>

      <collision name='front_1wheel_collision'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://bot_agv/meshes/front_1wheel.STL</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>

      <visual name='front_1wheel_visual'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://bot_agv/meshes/front_1wheel.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <joint name='front_2joint' type='fixed'>
      <pose relative_to='base_link'>0.37064 0.2111 -0.02206 1.5708 -0.701883 1e-06</pose>
      <parent>base_link</parent>
      <child>front_2wheel</child>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name='front_2wheel'>
      <pose relative_to='front_2joint'>0 0 0 0 0 0</pose>
      <inertial>
        <pose>-0 0 -0.0125 0 -0 0</pose>
        <mass>0.07</mass>
        <inertia>
          <ixx>1.95595e-05</ixx>
          <ixy>-3.38813e-21</ixy>
          <ixz>1.01542e-19</ixz>
          <iyy>1.95595e-05</iyy>
          <iyz>-8.4619e-20</iyz>
          <izz>3.18071e-05</izz>
        </inertia>
      </inertial>

      <collision name='front_2wheel_collision'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://bot_agv/meshes/front_2wheel.STL</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>

      <visual name='front_2wheel_visual'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://bot_agv/meshes/front_2wheel.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

<!-- ****************************** ROBOT BACK WHEEL ***************************** -->
    <joint name='back_3joint' type='fixed'>
      <pose relative_to='base_link'>-0.41936 0.2111 -0.02206 1.5708 -0.166093 3e-06</pose>
      <parent>base_link</parent>
      <child>back_3wheel</child>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name='back_3wheel'>
      <pose relative_to='back_3joint'>0 0 0 0 0 0</pose>
      <inertial>
        <pose>-0 0 -0.0125 0 -0 0</pose>
        <mass>0.07</mass>
        <inertial>
          <ixx>1.95595e-05</ixx>
          <ixy>2.11758e-22</ixy>
          <ixz>1.26073e-19</ixz>
          <iyy>1.95595e-05</iyy>
          <iyz>-2.12874e-20</iyz>
          <izz>3.18071e-05</izz>
        </inertial>
      </inertial>

      <collision name='back_3wheel_collision'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://bot_agv/meshes/back_3wheel.STL</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>

      <visual name='back_3wheel_visual'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://bot_agv/meshes/back_3wheel.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <joint name='back_4joint' type='fixed'>
      <pose relative_to='base_link'>-0.41936  -0.2222 -0.02206 -1.57079 0.967283 -3.14158</pose>
      <parent>base_link</parent>
      <child>back_4wheel</child>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name='back_4wheel'>
      <pose relative_to='back_4joint'>0 0 0 0 0 0</pose>
      <inertial>
        <pose>0.006175 0.004257 -0.0105 0 -0 0</pose>
        <mass>0.07</mass>
        <inertia>
          <ixx>1.95595e-05</ixx>
          <ixy>0</ixy>
          <ixz>-2.29323e-20</ixz>
          <iyy>1.95595e-05</iyy>
          <iyz>3.65719e-20</iyz>
          <izz>3.18071e-05</izz>
        </inertia>
      </inertial>

      <collision name='back_4wheel_collision'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://bot_agv/meshes/back_4wheel.STL</uri>
          </mesh>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>

      <visual name='back_4wheel_visual'>
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://bot_agv/meshes/back_4wheel.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>
    
<!-- ****************************** ROBOT WHEEL LINK *****************************    -->
    <joint name='wheel_first_joint' type='revolute'>
      <pose relative_to='base_link'>-0.02436 0.4328 0.04396 1.5708 0 0</pose>
      <parent>base_link</parent>
      <child>wheel_first</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>
    <link name='wheel_first'>
      <pose relative_to='wheel_first_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>-0 0 0.05 0 -0 0</pose>
        <mass>3.0709</mass>
        <inertia>
          <ixx>0.010409</ixx>
          <ixy>-6.074e-38</ixy>
          <ixz>3.7616e-35</ixz>
          <iyy>0.010409</iyy>
          <iyz>-3.1038e-35</iyz>
          <izz>0.0157</izz>
        </inertia>
      </inertial>

      <collision name='wheel_first_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://bot_agv/meshes/wheel_first.STL</uri>
          </mesh>
        </geometry>
        <surface>
          <!-- This friction pamareter don't contain reliable data!! -->
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>

      <visual name='wheel_first_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://bot_agv/meshes/wheel_first.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>

    <joint name='wheel_second_joint' type='revolute'>
      <pose relative_to='base_link'>-0.02436 -0.3172 0.04396 1.5708 0 0</pose>
      <parent>base_link</parent>
      <child>wheel_second</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <link name='wheel_second'>
      <pose relative_to='wheel_second_joint'>0 0 0 0 -0 0</pose>
      <inertial>
        <pose>0 -0 0.05 0 -0 0</pose>
        <mass>3.0709</mass>
        <inertia>
          <ixx>0.010409</ixx>
          <ixy>-6.074e-38</ixy>
          <ixz>4.4417e-37</ixz>
          <iyy>0.010409</iyy>
          <iyz>-3.1038e-35</iyz>
          <izz>0.0157</izz>
        </inertia>
      </inertial>

      <collision name='wheel_second_collision'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://bot_agv/meshes/wheel_second.STL</uri>
          </mesh>
        </geometry>
        <surface>
          <!-- This friction pamareter don't contain reliable data!! -->
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>

      <visual name='wheel_second_visual'>
        <pose>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://bot_agv/meshes/wheel_second.STL</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
    </link>
  
  <!-- *********************** WHEEL ODOMETRY ***************************    -->
  <plugin name="agv_drive" filename="libgazebo_ros_diff_drive.so">

    <update_rate>30</update_rate>

    <!-- wheels -->
    <left_joint>wheel_second_joint</left_joint>
    <right_joint>wheel_first_joint</right_joint>

    <!-- kinematics -->
    <wheel_separation>0.65</wheel_separation>
    <wheel_diameter>0.1</wheel_diameter>

    <!-- limits -->
    <max_wheel_torque>200</max_wheel_torque>
    <max_wheel_acceleration>2.0</max_wheel_acceleration>

    <!-- Receive velocity commands on this ROS topic -->
    <command_topic>cmd_vel</command_topic>

    <!-- output -->
    <!-- When false, publish no wheel odometry data to a ROS topic -->
    <publish_odom>true</publish_odom>

    <!-- When true, publish coordinate transform from odom to base_footprint -->
    <!-- I usually use the robot_localization package to publish this transform -->   
    <publish_odom_tf>true</publish_odom_tf>
    
    <!-- When true, publish coordinate transform from base_link to the wheels -->
    <!-- The robot_state_publisher package is often used to publish this transform -->   
    <publish_wheel_tf>false</publish_wheel_tf>

    <odometry_topic>odom</odometry_topic>
    <odometry_frame>odom</odometry_frame>
    <robot_base_frame>base_footprint</robot_base_frame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometry_source>0</odometry_source>

    <!-- Change the ROS topic we will publish the odometry data to -->
    <ros>
      <remapping>odom:=wheel/odometry</remapping>
    </ros>

  </plugin>

    <!-- *********************** JOINT STATE PUBLISHER *********************   -->
  
  <plugin name="agv_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
    <ros>
      <remapping>~/out:=joint_states</remapping>
    </ros>
    <update_rate>30</update_rate>
    <joint_name>wheel_second_joint</joint_name>
    <joint_name>wheel_first_joint</joint_name>
  </plugin>     


  </model>
</sdf>
